version: '3'
services:
  app:
    build: .
    container_name: plotr-signal
    working_dir: /app
    env_file: secrets.env
    environment:
      FLASK_APP: ./plotr_signal/main.py
    volumes:
      - ./:/app
    ports:
      - 5000:5000
    depends_on:
      - 'db'

  db:
    image: postgres:12-alpine
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=plotr
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  influx:
    image: influxdb:2.0.4
    ports:
      - 8086:8086
    volumes:
      - influxdb:/.influxdbv2

  zookeeper1:
    image: zookeeper:3.4.9
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper1:2888:3888
    volumes:
      - zookeeper1_data:/data
      - zookeeper1_datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka1
    ports:
      - "9092:9092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:9092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
    volumes:
      - kafka1_data:/var/lib/kafka/data
    depends_on:
      - zookeeper1

volumes: 
  postgres:
  influxdb:
  zookeeper1_data:
  zookeeper1_datalog:
  kafka1_data:
